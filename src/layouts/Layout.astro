---
interface Props {
  title: string;
}

const { title } = Astro.props;
import "../styles/reset.css";
import "../styles/tokens.css";
---

<!doctype html>
<html lang="nb-NO">
  <head>
    <meta charset="UTF-8" />
    <meta name="description" content="Astro description" />
    <meta name="viewport" content="width=device-width" />
    <link rel="icon" type="image/svg+xml" href="/favicon.svg" />
    <meta name="generator" content={Astro.generator} />
    <title>{title}</title>
  </head>
  <body>
    <slot />
  </body>
</html>

<style is:global>
  h1 {
    font-size: var(--step-5);
  }
  h2 {
    font-size: var(--step-4);
  }
  h3 {
    font-size: var(--step-3);
  }
  h4 {
    font-size: var(--step-2);
  }
  h5 {
    font-size: var(--step-1);
  }
  h6 {
    font-size: var(--step-0);
  }

  html {
    font-family: "Berkeley Mono", system-ui, sans-serif;
    background: white;
    font-size: 16px;
    accent-color: var(--color-primary-800);
  }
  body {
    font-size: var(--step--1);
  }
  code {
    font-family: "Berkeley Mono", monospace;
  }

  /* form {
    min-width: 30rem;
    display: grid;
    gap: 1.5rem;
  } */

  fieldset {
    display: grid;
    padding: 2rem;
    gap: 0.25rem;
    background-color: white;
    border: 2px solid var(--color-neutral-600);
    border-radius: var(--radius);
  }
  fieldset:focus-within {
    background-color: var(--color-neutral-950);
    box-shadow: 0px 0px 10px white;
    border-color: var(--color-primary-800);
  }

  button {
    display: inline-flex;
    align-items: center;
    justify-content: center;
    flex-shrink: 0;
    -webkit-user-select: none;
    -moz-user-select: none;
    user-select: none;
    vertical-align: top;

    border-radius: var(--radius);
  }

  button {
    /* reset */
    font: inherit;
    -webkit-appearance: none;
    -moz-appearance: none;
    appearance: none;
    background-color: transparent;
    border: none;
    line-height: inherit;
    letter-spacing: inherit;
    color: inherit;
    padding: 0;
    margin: 0;
    text-align: initial;
    -webkit-tap-highlight-color: transparent;
  }

  button {
    display: inline-flex;
    align-items: center;
    justify-content: center;
    flex-shrink: 0;
    -webkit-user-select: none;
    -moz-user-select: none;
    user-select: none;
    vertical-align: top;
    border: 2px solid var(--color-primary-800);
    background: var(--color-primary-800);
    color: white;
    border-radius: 8px;
    padding: 8px 12px;
  }

  button[type="reset"] {
    background-color: white;
    color: var(--color-primary-800);
    border-color: var(--color-primary-800);
  }

  input[type="text"],
  input[type="number"],
  input[type="email"],
  input[type="date"],
  input[type="password"],
  input[type="url"],
  input[type="search"],
  input[type="tel"],
  textarea,
  select {
    -webkit-appearance: none;
    font: inherit;
    border-radius: 4px;
    border: 2px solid var(--color-neutral-600);
    padding: 0.5rem 1rem;
    font: inherit;
    border-radius: var(--radius);
  }

  input[type="range"] {
    --thumb-height: 2rem;
    --thumb-width: 3.5rem;
    --track-height: 2rem;
    height: calc(var(--thumb-height));
    padding-block: 0.5rem;
    -webkit-appearance: none;
    appearance: none;
    background: transparent;
    background-color: transparent;
    cursor: pointer;
    min-width: 15rem;
    border-radius: 1rem;
  }
  input[type="range"]:focus {
    /* outline: none; */
  }

  input[type="range"]::-webkit-slider-runnable-track {
    background: var(--color-neutral-900);
    height: var(--track-height);
    border-radius: 1rem;
  }
  input[type="range"]::-webkit-slider-thumb {
    -webkit-appearance: none;
    appearance: none;

    background-color: var(--color-primary-800);
    border-radius: 1rem;
    height: var(--thumb-height);
    width: var(--thumb-width);
    transition: 300ms ease all;
  }
  input[type="range"]:focus::-webkit-slider-thumb {
    background-color: var(--color-primary-800);
    transform: scale(0.8);
  }

  label small {
    display: block;
  }

  .stack {
    display: grid;
    gap: 1rem;
  }

  .stack > .stack {
    gap: 0.5rem;
  }

  .button-row {
    display: flex;
    gap: 0.5rem;
    align-items: center;
  }
  .grow {
    flex-grow: 1;
  }

  ::selection {
    background-color: var(--color-primary-800);
    color: var(--color-neutral-950);
  }

  input {
    outline-offset: 3px;
    outline-width: 3px;
    outline-style: solid;
    outline-color: transparent;
  }

  :focus,
  .focus-within:focus-within {
    outline-color: var(--color-primary-600);
    border-radius: var(--radius);
    border-color: var(--color-primary-700);
    transition: outline 100ms ease;

    will-change: outline;
  }

  .focus-within :focus {
    outline: 0;
  }

  .focus-container {
    border-radius: 8px;
  }

  .focus-container:has(input:invalid) {
    background-color: #ff000026;
  }
</style>
